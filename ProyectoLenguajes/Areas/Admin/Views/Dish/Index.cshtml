@model IEnumerable<Dish>
@{
    ViewData["Title"] = "Dishes";
}
 
<div class="container mt-5"> 

	<!-- Título -->
	<div class="mb-4">
		<h1 class="display-6 fw-semibold">Dish List</h1>
		<p class="text-muted mb-3">Manage and explore your dishes</p>

		<div class="d-flex flex-wrap gap-2">
			<div class="input-group" style="max-width: 400px;">
				<input type="text" id="searchInput" class="form-control" placeholder="Search by name...">
				<button class="btn btn-outline-primary" type="button" id="searchButton">
					<i class="bi bi-search"></i> Search
				</button>
			</div>
			<a asp-action="Upsert" class="btn btn-primary">
				<i class="bi bi-plus-circle"></i> Add New Dish
			</a>
		</div>
	</div>


	<!-- Grid de platillos -->
	<div class="dish-grid">
		@foreach (var dish in Model)
		{
			<div class="dish-card">
				<img src="@Url.Content("~/" + dish.URLImage)" alt="@dish.Name" class="dish-image" />

				<div class="dish-details">
					<h3 class="dish-title">@dish.Name</h3>
					<div class="dish-description">
						@Html.Raw(dish.Description)
					</div>
					<p class="dish-price text-success fw-semibold">$@dish.Price.ToString("F2")</p>

					<div class="d-flex gap-2 mt-2">
						<a asp-action="Upsert" asp-route-id="@dish.Id" class="btn btn-sm btn-warning">
							<i class="bi bi-pencil-square"></i> Edit
						</a>
						<button class="btn btn-sm btn-danger" onclick="deleteDish(@dish.Id)">
							<i class="bi bi-trash"></i> Delete
						</button>
					</div>
				</div>
			</div>
		}

	</div>
	<div class="d-flex justify-content-end mt-4">
		<a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-light" style="margin-bottom: 30px;">Back</a>
	</div>

	<!-- Estilos -->
	<style>
		.dish-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
			gap: 1.5rem;
		}

		.dish-card {
			background: #fff;
			border-radius: 16px;
			box-shadow: 0 6px 16px rgba(0,0,0,0.1);
			overflow: hidden;
			display: flex;
			flex-direction: column;
			transition: transform 0.25s ease, box-shadow 0.25s ease;
		}

		.dish-card:hover {
			transform: translateY(-4px);
			box-shadow: 0 8px 24px rgba(0,0,0,0.15);
		}

		.dish-image {
			width: 100%;
			height: 180px;
			object-fit: cover;
		}

		.dish-details {
			padding: 1rem;
			font-size: 0.95rem;
			color: #444;
		}

		.dish-title {
			font-size: 1.2rem;
			margin-bottom: 0.3rem;
			color: #222;
		}

		.dish-description {
			display: -webkit-box;
			-webkit-line-clamp: 5; /* Número de líneas */
			-webkit-box-orient: vertical;
			overflow: hidden;
			text-overflow: ellipsis;
		}

		.dish-price {
			margin-top: 0.5rem;
		}

		/* Animación para botones :D */
		.btn {
			transition: all 0.2s ease;
		}

		.btn:hover {
			transform: scale(1.03);
		}
	</style>

</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.getElementById('searchButton');
        const originalCards = [...document.querySelectorAll('.dish-card')];

        function filterDishes() {
            const term = searchInput.value.toLowerCase().trim();
            originalCards.forEach(card => {
                const name = card.querySelector('.dish-title').textContent.toLowerCase();
                card.style.display = name.includes(term) ? 'block' : 'none';
            });
        }

        searchInput.addEventListener('input', filterDishes);
        searchButton.addEventListener('click', filterDishes);

		function deleteDish(id) {
			if (confirm("Are you sure you want to delete this dish?")) {
				axios.delete(`/Admin/Dish/Delete/${id}`)
					.then(res => {
						if (res.data.success) {
							toastr.success(res.data.message);
							setTimeout(() => location.reload(), 1500);
						} else {
							toastr.error(res.data.message);
						}
					});
			}
		}
    </script>
}
