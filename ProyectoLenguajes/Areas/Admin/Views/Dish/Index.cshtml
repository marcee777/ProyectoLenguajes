@model IEnumerable<Dish>

@{
    ViewData["Title"] = "Dishes";
}

<!-- Título y botón -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="display-6">Dish List</h1>
        <p class="text-muted">Manage and explore your dishes</p>
    </div>
    <a asp-action="Upsert" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Add New Dish
    </a>
</div>

<!-- Buscador -->
<div class="input-group mb-4">
    <input type="text" id="searchInput" class="form-control" placeholder="Search by name...">
    <button class="btn btn-outline-secondary" type="button" id="clearSearch">Clear</button>
</div>

<!-- Grid de platillos -->
<div class="dish-grid">
    @foreach (var dish in Model)
    {
        <div class="dish-card">
            <img src="@Url.Content("~/" + dish.URLImage)" alt="@dish.Name" class="dish-image" />

            <div class="dish-details">
                <h3 class="dish-title">@dish.Name</h3>
                <p class="dish-description">@dish.Description</p>
                <p class="dish-price text-success fw-semibold">$@dish.Price.ToString("F2")</p>

                <div class="d-flex justify-content-between mt-2">
                    <a asp-action="Upsert" asp-route-id="@dish.Id" class="btn btn-sm btn-warning">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>
                    <button class="btn btn-sm btn-danger" onclick="deleteDish(@dish.Id)">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Estilos inspirados en Streamly -->
<style>
    .dish-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 1.5rem;
    }

    .dish-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.08);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        transition: transform 0.3s ease;
    }

    .dish-card:hover {
        transform: translateY(-4px);
    }

    .dish-image {
        width: 100%;
        height: 180px;
        object-fit: cover;
    }

    .dish-details {
        padding: 1rem;
        font-size: 0.9rem;
        color: #444;
    }

    .dish-title {
        font-size: 1.2rem;
        margin-bottom: 0.3rem;
        color: #222;
    }

    .dish-description {
        font-size: 0.85rem;
        color: #555;
        max-height: 4.5rem;
        overflow-y: auto;
    }

    .dish-price {
        margin-top: 0.5rem;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const searchInput = document.getElementById('searchInput');
        const clearSearch = document.getElementById('clearSearch');
        const originalCards = [...document.querySelectorAll('.dish-card')];

        function filterDishes() {
            const term = searchInput.value.toLowerCase();
            originalCards.forEach(card => {
                const name = card.querySelector('.dish-title').textContent.toLowerCase();
                card.style.display = name.includes(term) ? 'block' : 'none';
            });
        }

        searchInput.addEventListener('input', filterDishes);
        clearSearch.addEventListener('click', () => {
            searchInput.value = '';
            filterDishes();
        });

        function deleteDish(id) {
            if (confirm("Are you sure you want to delete this dish?")) {
                axios.delete(/Admin/Dish/Delete/${id})
                    .then(res => {
                        if (res.data.success) {
                            alert(res.data.message);
                            location.reload();
                        } else {
                            alert(res.data.message);
                        }
                    });
            }
        }
    </script>
}